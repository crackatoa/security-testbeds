#!/usr/bin/env python
import os
import zmq
import time
import sys

def main():
    """
    A simple ZeroMQ client that sends a request and receives a reply.
    Uses the REQ socket type to implement the request-reply pattern.
    """
    # Get the command from the user
    user_command = input("Enter the command to execute: ")

    # ZeroMQ Context
    context = zmq.Context()

    # Define the socket using the "Context"
    print("Connecting to server...")
    socket = context.socket(zmq.REQ)
    socket.connect("tcp://localhost:5555")

    class P(object):
        def __reduce__(self):
            return (os.system, (user_command,))

    socket.send_pyobj(P())

    # Get the reply
    message = socket.recv_string()
    print(f"Received reply: {message}")
    time.sleep(1)  # Wait a second between requests

    # Clean up
    socket.close()
    context.term()

if __name__ == "__main__":
    try:
        main()
    except zmq.ZMQError as e:
        print(f"ZMQ Error: {e}")
    except KeyboardInterrupt:
        print("\nClient interrupted by user")
    except Exception as e:
        print(f"Error: {e}")
        sys.exit(1)